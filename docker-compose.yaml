services:

  db:
    container_name: db
    image: postgres:17.2-alpine3.21
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  adminer:
    image: adminer:4.8.1
    ports:
      - 8081:8080
    depends_on:
      - db

  # golang:
  #   build: ./golang-test-app
  #   container_name: golang-test-app
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - DATABASE_URL=postgres://username:password@db:5432/yourdb?sslmode=disable
  #   depends_on:
  #     - db

  # jaeger:
  #   image: jaegertracing/all-in-one:1.6.0
  #   container_name: jaeger
  #   ports:
  #     - "5775:5775"      # UDP for the agent
  #     - "6831:6831/udp"  # UDP for the collector
  #     - "6832:6832/udp"  # UDP for the collector
  #     - "5778:5778"      # HTTP for the agent
  #     - "16686:16686"    # HTTP for the Jaeger UI
  #     - "14268:14268"    # HTTP for the collector
  #     - "14250:14250"    # gRPC for the collector
  #     - "16500:16500"    # gRPC for the agent
  #   environment:
  #     COLLECTOR_ZIPKIN_HTTP_PORT: 9411
  #   depends_on:
  #     - golang

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    # if you are running as root then set it to 0
    # else find the right id with the id -u command
    user: '0'
    ports:
      - '3000:3000'
    # adding the mount volume point which we create earlier
    volumes:
      - '$PWD/logs_grafana:/var/lib/grafana'
    # depends_on:
      # - jaeger